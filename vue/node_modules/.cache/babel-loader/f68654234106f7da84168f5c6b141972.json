{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from \"@/store\";\nVue.use(VueRouter);\nconst routes = [{\n  path: '/login',\n  name: 'Login',\n  component: () => import('../views/Login.vue')\n}, {\n  path: '/register',\n  name: 'Register',\n  component: () => import('../views/Register.vue')\n}, {\n  path: '/404',\n  name: '404',\n  component: () => import('../views/404.vue')\n}];\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes\n}); // 提供一个重置路由的方法\n\nexport const resetRouter = () => {\n  router.matcher = new VueRouter({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes\n  });\n};\nexport const setRoutes = () => {\n  const storeMenus = localStorage.getItem(\"menus\");\n\n  if (storeMenus) {\n    // 获取当前的路由对象名称数组\n    const currentRouteNames = router.getRoutes().map(v => v.name);\n\n    if (!currentRouteNames.includes('Manage')) {\n      // 拼装动态路由\n      const manageRoute = {\n        path: '/',\n        name: 'Manage',\n        component: () => import('../views/Manage.vue'),\n        redirect: \"/home\",\n        children: [{\n          path: 'person',\n          name: '个人信息',\n          component: () => import('../views/Person.vue')\n        }, {\n          path: 'password',\n          name: '修改密码',\n          component: () => import('../views/Password.vue')\n        }]\n      };\n      const menus = JSON.parse(storeMenus);\n      menus.forEach(item => {\n        if (item.path) {\n          // 当且仅当path不为空的时候才去设置路由\n          let itemMenu = {\n            path: item.path.replace(\"/\", \"\"),\n            name: item.name,\n            component: () => import('../views/' + item.pagePath + '.vue')\n          };\n          manageRoute.children.push(itemMenu);\n        } else if (item.children.length) {\n          item.children.forEach(item => {\n            if (item.path) {\n              let itemMenu = {\n                path: item.path.replace(\"/\", \"\"),\n                name: item.name,\n                component: () => import('../views/' + item.pagePath + '.vue')\n              };\n              manageRoute.children.push(itemMenu);\n            }\n          });\n        }\n      }); // 动态添加到现在的路由对象中去\n\n      router.addRoute(manageRoute);\n    }\n  }\n}; // 重置我就再set一次路由\n\nsetRoutes(); // 路由守卫\n\nrouter.beforeEach((to, from, next) => {\n  localStorage.setItem(\"currentPathName\", to.name); // 设置当前的路由名称，为了在Header组件中去使用\n\n  store.commit(\"setPath\"); // 触发store的数据更新\n  //未找到路由的情况\n\n  if (!to.matched.length) {\n    const storeMenu = localStorage.getItem(\"menu\");\n\n    if (storeMenu) {\n      next(\"/404\");\n    } else {\n      next(\"/login\");\n    }\n  }\n\n  next(); // 其他情况放行路由\n});\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","store","use","routes","path","name","component","router","mode","base","process","env","BASE_URL","resetRouter","matcher","setRoutes","storeMenus","localStorage","getItem","currentRouteNames","getRoutes","map","v","includes","manageRoute","redirect","children","menus","JSON","parse","forEach","item","itemMenu","replace","pagePath","push","length","addRoute","beforeEach","to","from","next","setItem","commit","matched","storeMenu"],"sources":["C:/Users/Qizhe/Desktop/admin-main/vue/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport store from \"@/store\";\n\nVue.use(VueRouter)\n\nconst routes = [\n    {\n        path: '/login',\n        name: 'Login',\n        component: () => import('../views/Login.vue')\n    },\n    {\n        path: '/register',\n        name: 'Register',\n        component: () => import('../views/Register.vue')\n    },\n    {\n        path: '/404',\n        name: '404',\n        component: () => import('../views/404.vue')\n    },\n]\n\nconst router = new VueRouter({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes\n})\n\n// 提供一个重置路由的方法\nexport const resetRouter = () => {\n    router.matcher = new VueRouter({\n        mode: 'history',\n        base: process.env.BASE_URL,\n        routes\n    })\n}\n\nexport const setRoutes = () => {\n    const storeMenus = localStorage.getItem(\"menus\");\n    if (storeMenus) {\n        // 获取当前的路由对象名称数组\n        const currentRouteNames = router.getRoutes().map(v => v.name)\n        if (!currentRouteNames.includes('Manage')) {\n        // 拼装动态路由\n        const manageRoute = {\n            path: '/',\n            name: 'Manage',\n            component: () => import('../views/Manage.vue'),\n            redirect: \"/home\",\n            children: [\n                {path:'person',name:'个人信息',component:()=>import('../views/Person.vue')},\n                {path:'password',name:'修改密码',component:()=>import('../views/Password.vue')},\n            ]\n        }\n        const menus = JSON.parse(storeMenus)\n        menus.forEach(item => {\n            if (item.path) {  // 当且仅当path不为空的时候才去设置路由\n                let itemMenu = {\n                    path: item.path.replace(\"/\", \"\"),\n                    name: item.name,\n                    component: () => import('../views/' + item.pagePath + '.vue')\n                }\n                manageRoute.children.push(itemMenu)\n            } else if (item.children.length) {\n                item.children.forEach(item => {\n                    if (item.path) {\n                        let itemMenu = {\n                            path: item.path.replace(\"/\", \"\"),\n                            name: item.name,\n                            component: () => import('../views/' + item.pagePath + '.vue')\n                        }\n                        manageRoute.children.push(itemMenu)\n                    }\n                })\n            }\n        })\n        // 动态添加到现在的路由对象中去\n        router.addRoute(manageRoute)\n        }\n    }\n}\n// 重置我就再set一次路由\nsetRoutes()\n\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n    localStorage.setItem(\"currentPathName\", to.name)  // 设置当前的路由名称，为了在Header组件中去使用\n    store.commit(\"setPath\")  // 触发store的数据更新\n    //未找到路由的情况\n    if (!to.matched.length) {\n        const storeMenu = localStorage.getItem(\"menu\")\n        if (storeMenu) {\n            next(\"/404\")\n        } else {\n            next(\"/login\")\n        }\n    }\n    next()  // 其他情况放行路由\n})\n\nexport default router\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}