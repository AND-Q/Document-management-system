{"ast":null,"code":"import { setRoutes } from \"@/router\";\nexport default {\n  name: \"Login\",\n\n  data() {\n    return {\n      user: {},\n      textTitle: \"登录页\",\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  created() {\n    document.title = this.textTitle;\n  },\n\n  methods: {\n    login() {\n      //提交前进行表单校验，合法才提交表单，不合法不提交\n      this.$refs['userForm'].validate(valid => {\n        if (valid) {\n          //表单提交\n          this.request.post(\"/user/login\", this.user).then(res => {\n            if (res.code === \"200\") {\n              localStorage.setItem(\"user\", JSON.stringify(res.data)); //浏览器存用户信息\n\n              localStorage.setItem(\"menus\", JSON.stringify(res.data.menus)); //浏览器存菜单信息\n              //动态设置当前用户的路由\n\n              setRoutes();\n              this.$message.success(\"登录成功！\");\n              this.$router.push(\"/\");\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyBA;AAEA;EACAA,aADA;;EAEAC;IACA;MACAC,QADA;MAEAC,gBAFA;MAGAC;QACAC,WACA;UAAAC;UAAAC;UAAAC;QAAA,CADA,CADA;QAIAC,WACA;UAAAH;UAAAC;UAAAC;QAAA,CADA;MAJA;IAHA;EAYA,CAfA;;EAgBAE;IACAC;EACA,CAlBA;;EAmBAC;IACAC;MACA;MACA;QACA;UACA;UACA;YACA;cACAC,uDADA,CACA;;cACAA,8DAFA,CAEA;cACA;;cACAC;cACA;cACA;YACA,CAPA,MAOA;cACA;YACA;UACA,CAXA;QAYA;MACA,CAhBA;IAiBA;;EApBA;AAnBA","names":["name","data","user","textTitle","rules","username","required","message","trigger","password","created","document","methods","login","localStorage","setRoutes"],"sourceRoot":"src/views","sources":["Login.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div\n        style=\"margin: 200px auto; background-color: #fff; width: 350px; height: 300px; padding: 20px; border-radius: 10px\">\n      <div style=\"margin: 20px 0; color: #4158D0; text-align: center;font-size: 24px\"><b>登 录</b></div>\n      <el-form :model=\"user\" status-icon :rules=\"rules\" ref=\"userForm\">\n        <el-form-item prop=\"username\">\n          <el-input size=\"medium\" style=\"margin: 8px 0\" prefix-icon=\"el-icon-user\" v-model=\"user.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input size=\"medium\" style=\"margin: 8px 0\" prefix-icon=\"el-icon-lock\" show-password\n                    v-model=\"user.password\"></el-input>\n        </el-form-item>\n        <el-form-item style=\"margin: 8px 0; text-align: center\">\n          <el-button type=\"primary\" style=\"margin-right: 15px\" size=\"small\" autocomplete=\"off\" @click=\"login\">登录\n          </el-button>\n          <el-button type=\"success\" size=\"small\" autocomplete=\"off\" @click=\"$router.push('/register')\">注册</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport {setRoutes} from \"@/router\";\n\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      user: {},\n      textTitle:\"登录页\",\n      rules: {\n        username: [\n          {required: true, message: '请输入用户名', trigger: 'blur'},\n        ],\n        password: [\n          {required: true, message: '请输入密码', trigger: 'blur'},\n        ],\n      }\n    }\n  },\n  created(){\n    document.title = this.textTitle\n  },\n  methods: {\n    login() {\n      //提交前进行表单校验，合法才提交表单，不合法不提交\n      this.$refs['userForm'].validate((valid) => {\n        if (valid) {\n          //表单提交\n          this.request.post(\"/user/login\", this.user).then(res => {\n            if (res.code === \"200\") {\n              localStorage.setItem(\"user\",JSON.stringify(res.data))//浏览器存用户信息\n              localStorage.setItem(\"menus\",JSON.stringify(res.data.menus))//浏览器存菜单信息\n              //动态设置当前用户的路由\n              setRoutes()\n              this.$message.success(\"登录成功！\")\n              this.$router.push(\"/\")\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      });\n    }\n  }\n}\n</script>\n\n\n<style>\n.wrapper {\n  height: 100vh;\n  background-image: linear-gradient(43deg, #4158D0 0%, #C850C0 46%, #FFCC70 100%);\n  overflow: hidden;\n}\n</style>"]},"metadata":{},"sourceType":"module"}